name: Run fvt tests

on:
    push:
    pull_request:
    release:
        types:
            - published
            - prereleased

jobs:
    fvt_tests_with_edgex:
        runs-on: ubuntu-latest

        steps:
        - uses: actions/setup-go@v1
          with:
            go-version: '1.11.5'
        - uses: actions/setup-java@v1
          with:
            java-version: '8' # The JDK version to make available on the path.
            java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
            architecture: x64 # (x64 or x86) - defaults to x64
        - name: set up jmeter
          timeout-minutes: 10
          env:
            JMETER_VERSION: 5.2.1
          run: |
            wget -O /tmp/apache-jmeter.tgz http://us.mirrors.quenda.co/apache//jmeter/binaries/apache-jmeter-$JMETER_VERSION.tgz
            cd /tmp && tar -xvf apache-jmeter.tgz
            echo "jmeter.save.saveservice.output_format=xml" >> /tmp/apache-jmeter-$JMETER_VERSION/user.properties
            echo "jmeter.save.saveservice.response_data.on_error=true" >> /tmp/apache-jmeter-$JMETER_VERSION/user.properties
            wget -O /tmp/apache-jmeter-$JMETER_VERSION/lib/ext/mqtt-xmeter-1.13-jar-with-dependencies.jar https://github.com/emqx/mqtt-jmeter/raw/master/Download/v1.13.0/mqtt-xmeter-1.13-jar-with-dependencies.jar
            ln -s /tmp/apache-jmeter-$JMETER_VERSION /opt/jmeter
        - name: install emqx
          env:
            EMQX_VERSION: v4.0.2
          run: |
            wget -O emqx.deb https://www.emqx.io/downloads/broker/v4.0.2/emqx-ubuntu18.04-${EMQX_VERSION}_amd64.deb
            sudo dpkg -i emqx.deb
        - uses: actions/checkout@v2
        - name: build kuiper
          run: |
            sudo apt update && sudo apt install pkg-config libczmq-dev -y
            make build_with_edgex
        - name: run edgex && emqx && kuiper
          run: |
            sudo ./fvt_scripts/setup_env.sh
            ln -s _build/kuiper-$(git describe --tags --always)-$(uname -s | tr "[A-Z]" "[a-z]")-x86_64/log kuiper_logs
        - name: run fvt tests
          timeout-minutes: 5
          run: ./fvt_scripts/run_jmeter.sh with_edgex=true
        - uses: actions/upload-artifact@v1
          if: always()
          with:
            name: kuiper_logs_with_edgex
            path: ./kuiper_logs
        - uses: actions/upload-artifact@v1
          if: always()
          with:
            name: jmeter_logs_with_edgex
            path: ./jmeter_logs
        - name: checkout out
          run: |
            sudo apt update && sudo apt install -y libxml2-utils
            cd jmeter_logs
            if [ "$(xmllint --format --xpath '/testResults/sample/@rc' $(ls *.jtl) | sed -r 's/ /\n/g;' | sort -u | grep -E 'rc=\"[45][0-9][0-9]\"|rc=\"\"')" != "" ]; then
                echo -e "---------------------------------------------\n"
                echo "FVT tests error"
                exit 1
            fi
            
    fvt_tests_without_edgex:
        runs-on: ubuntu-latest

        steps:
        - uses: actions/setup-go@v1
          with:
            go-version: '1.11.5'
        - uses: actions/setup-java@v1
          with:
            java-version: '8' # The JDK version to make available on the path.
            java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
            architecture: x64 # (x64 or x86) - defaults to x64
        - name: set up jmeter
          timeout-minutes: 10
          env:
            JMETER_VERSION: 5.2.1
          run: |
            wget -O /tmp/apache-jmeter.tgz http://us.mirrors.quenda.co/apache//jmeter/binaries/apache-jmeter-$JMETER_VERSION.tgz
            cd /tmp && tar -xvf apache-jmeter.tgz
            echo "jmeter.save.saveservice.output_format=xml" >> /tmp/apache-jmeter-$JMETER_VERSION/user.properties
            echo "jmeter.save.saveservice.response_data.on_error=true" >> /tmp/apache-jmeter-$JMETER_VERSION/user.properties
            wget -O /tmp/apache-jmeter-$JMETER_VERSION/lib/ext/mqtt-xmeter-1.13-jar-with-dependencies.jar https://github.com/emqx/mqtt-jmeter/raw/master/Download/v1.13.0/mqtt-xmeter-1.13-jar-with-dependencies.jar
            ln -s /tmp/apache-jmeter-$JMETER_VERSION /opt/jmeter
        - name: install emqx
          env:
            EMQX_VERSION: v4.0.2
          run: |
            wget -O emqx.deb https://www.emqx.io/downloads/broker/v4.0.2/emqx-ubuntu18.04-${EMQX_VERSION}_amd64.deb
            sudo dpkg -i emqx.deb
        - uses: actions/checkout@v2
        - name: build kuiper
          run: |
            sudo apt update && sudo apt install pkg-config libczmq-dev -y
            make
        - name: run edgex && emqx && kuiper
          run: |
            sudo ./fvt_scripts/setup_env.sh
            ln -s _build/kuiper-$(git describe --tags --always)-$(uname -s | tr "[A-Z]" "[a-z]")-x86_64/log kuiper_logs
        - name: run fvt tests
          timeout-minutes: 5
          run: ./fvt_scripts/run_jmeter.sh with_edgex=false
        - uses: actions/upload-artifact@v1
          if: always()
          with:
            name: kuiper_logs_without_edgex
            path: ./kuiper_logs
        - uses: actions/upload-artifact@v1
          if: always()
          with:
            name: jmeter_logs_without_edgex
            path: ./jmeter_logs
        - name: checkout out
          run: |
            sudo apt update && sudo apt install -y libxml2-utils
            cd jmeter_logs
            if [ "$(xmllint --format --xpath '/testResults/sample/@rc' $(ls *.jtl) | sed -r 's/ /\n/g;' | sort -u | grep -E 'rc=\"[45][0-9][0-9]\"|rc=\"\"')" != "" ]; then
                echo -e "---------------------------------------------\n"
                echo "FVT tests error"
                exit 1
            fi

    container_tests:
      runs-on: ubuntu-latest

      steps:
      - uses: actions/checkout@v2
      - name: setup docker
        run: |
          sudo apt-get remove docker docker-engine docker.io containerd runc
          sudo apt-get update
          sudo apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
          sudo apt-get update
          sudo apt-get install docker-ce docker-ce-cli containerd.io
      - name: install k3s && helm
        run: |
          sudo sh -c "curl -sfL https://get.k3s.io | sh -"
          sudo sh -c "curl -sfL https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | sh -"
      - name: build kuiper for docker
        run: make docker
      - name: run kuiper for chart
        run: |
          sed -i -r "s/^appVersion: .*$/appVersion: $(git describe --tags --always)/g" deploy/chart/kuiper/Chart.yaml
          helm install kuiper --set image.pullPolicy=Never .
      - name: check kuiper
        timeout-minutes: 1
        run: |
          while [ "$(kubectl get StatefulSet -l app.kubernetes.io/name=kuiper -o jsonpath='{.items[0].status.replicas}')" \
            != "$(kubectl get StatefulSet -l app.kubernetes.io/name=kuiper -o jsonpath='{.items[0].status.readyReplicas}')" ]; do
            echo "waiting kuiper started"
            sleep 5
          done
          kuiper_address=$(kubectl get svc --namespace default -l app.kubernetes.io/name=kuiper -o jsonpath="{.items[0].spec.clusterIP}")
          if [ $(curl -w %{http_code} -fsSL -o /dev/null $kuiper_address:9081/rules) != 200 ];then exit 1; fi
